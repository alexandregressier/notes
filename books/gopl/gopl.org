#+TITLE: The Go Programming Language - Notes
#+AUTHOR: Alexandre Gressier
#+DATE: <2019-10-01 Tue>

* Preface

  #+BEGIN_QUOTE
    Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.
  #+END_QUOTE

  Conceived in *September 2007* by:
  - [[https://channel9.msdn.com/Events/Speakers/Robert-Griesemer][Robert Griesemer]]
  - [[https://en.wikipedia.org/wiki/Rob_Pike][Rob Pike]]
  - [[https://en.wikipedia.org/wiki/Ken_Thompson][Ken Thompson]]
  (All at Google at the time)

  Initial release: *2012/03/28*
  Version at the time of reading: *1.13.1*

  Like C, Go is a /general purpose/ programming language

  _Features:_
  - Garbage collection
  - Package system
  - First-class functions
  - Lexical scope
  - System call interface
  - Immutable strings

  *CSP:* Communicating Sequential Programs
  -> Implementation: /goroutines/

  #+BEGIN_SRC bash
    export GOPATH =$HOME/gobook   # choose workspace directory
    go get gopl.io/ch1/helloworld # fetch, build, install
    $GOPATH/bin/helloworld        # run
  #+END_SRC

  ~go get~ fetch source code and *place it in the corresponding directory*

  _Useful places:_
  - https://golang.org/
  - https://blog.golang.org/
  - https://play.golang.org/
  - https://tour.golang.org/
  - https://golang.org/pkg/


* Chapter 1 - Tutorial

  C is one of the most direct influences on Go
  Go is a /compiled/ language

  The /Go toolchain/ is accessible through a single command: ~$ go~
  Subcommands:
  - run: ~$ go run helloworld.go~
    - Compiles the source code from one or more source files whose name end in .go
    - Links it with libraries
    - Runs the resulting executable file
    -> For one-shot experiments
  - build: ~$ go build helloworld.go~
    - Creates an /executable binary file/
    - $ ./helloworld

  Go natively handles Unicode
  Practical usage:
  #+BEGIN_SRC go
    // Copyright Â© 2016 Alan A. A. Donovan & Brian W. Kernighan.
  #+END_SRC

  _Note:_ the compiled program is 2,008,649 bytes, whereas a C program is 16,480 bytes (x 122 bigger)

  Go code is organized into /packages/ (similar to libraries or modules in other languages)
  *Package:* one or more .go source files in a single directory

  Each Go source file:
  - Begins with a /~package~ declaration/ that states which package the file belongs to
  - A list of other packages that it imports
  - The /declarations/ of the program that are stored in that file
